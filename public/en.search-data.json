{"/docs/":{"data":{"":"This is a test of documentation. You can go ahead an navigate to our FTC docs and FRC docs from the panel over in the side (or in the menu on mobile).","hello-code-snippet#Hello! Code Snippet":" 1 2 3 4 5 public class Main { public static void main(String[] args) { System.out.println(\"HELLO\"); } } And that was some code to test the system to make sure it can format stuff. ‚ÑπÔ∏è You can copy code by hovering over it so a little icon will appear in the corner. Clicking that will copy the code. "},"title":"Documentation"},"/docs/frc/":{"data":{"":"","what-is-on-this-website#What Is on This Website?":"This website is supposed to be a goldmine of knowledge for FIRST teams, as well as our team.\nWe will also use this site as a way to keep track of important information and help with team sustainability over time.","what-is-our-frc-team#What is Our FRC Team?":"Our team, #9777, is our FRC team based off our FTC team #8081 and our sister FTC team Carbo-Knights (team #19728).\nThis team was founded in 2024.","where-do-i-start#Where Do I Start?":"I recommend using this documentation as a reference. There isn‚Äôt a step-by-step guide on how to get started, but looking at our documentation for swerve and other systems could definitely be helpful."},"title":"FRC"},"/docs/frc/programming/":{"data":{"":"You have reached the page for FRC programming Docs. Check out our intro to swerve."},"title":"Programming"},"/docs/frc/programming/intro-to-swerve/":{"data":{"":"This is the Intro to Swerve documentation by the Knight of the Lab Table!!\nAgain, go to the main page if you want to add anything. We‚Äôll try our best to make this an easy understandable guide to make swerve for yourself. You can start here."},"title":"Intro to Swerve"},"/docs/frc/programming/intro-to-swerve/intro/":{"data":{"swerve-drive#Swerve Drive":"Swerve Drive is the implementation of these wheels to power/push your robot so it can drive fast, accurately, and forcefully.","swerve-from-a-hardware-perspective#Swerve From a Hardware Perspective":"Swerve is basically a shopping cart or dolly with spinning wheels. It‚Äôs similar to one of those rotating chairs you sit on.\nThe wheels have two parts: the part that orients or aligns the wheel, and the part that makes it spin or go.\nA good example is the front wheel of a car, there is a ‚Äúmotor‚Äù that turns the wheel (not really, but using it as an example) to face any heading. The other part of the wheel is the drive. The drive is the engine that actually propels the wheel.\n(Yes I know the car geeks will only say that works for 4 wheel drive and that the heading can only go a few degreees, but it‚Äôs hard to make a better example)","what-is-swerve#What is swerve?":"What is swerve?Serve drive is a fun one to explain, because it takes a long time to fully understand it, but once you do, you cannot go back."},"title":"Intro"},"/docs/frc/programming/intro-to-swerve/looking-at-swerve/":{"data":{"":"","controlling-the-robot#Controlling the Robot":"We use a controller to tell the robot where to go. The first thing we need to do is understand how swerve control works.\nOur controllers have two joysticks that can be used to control the robot.\nNote that the joystick with the blue arrows has them pointing in all directions. This represents where you want the robot to go to. The other joystick is for controlling the heading of the robot.\n‚ÑπÔ∏è The joystick with the blue is on the left and controlls the position of the robot. Swerve enables the robot to go in any direction, including sideways and forward, like a drone or helicopter. The purple arrows represent the manner that a person would want to turn the robot.\nThe control systems are intuitive and the robot‚Äôs positioning should look like this:\nNext we‚Äôll look at breaking the overall breakdown of swerve.\nüóíÔ∏è We use the ‚ÄúPS4‚Äù controllers (console controllers) as most people call them. This is intentional, and we recognize some teams use joysticks. We are using these because everyone has one of these at home, you can find them for very cheap at your local store, and translating it to using the joysticks isn‚Äôt too difficult. ","swerve-overview#swerve Overview":"Swerve is a little complex at first, but to implement it takes a lot of thinking (trust me, I‚Äôll try to make it easy, so you don‚Äôt have to have a few existential crisis as you program it for the sixth time)\nSweve drive has to start with the basics: you have 4 wheels. The first thing you need to do is understand how they work.\nEach of you for wheels has some manner that they need to go to push your robot, and there are 2 different factors that show how they work. These are:\nSpeed - How fast you want your wheel to go. This is a number between 0 and 1, where 0 is not moving at all and 1 is maximum speed. Heading - The direction the wheel needs to go. ‚ÑπÔ∏è Heading: the angle that something is facing. It‚Äôs important because it is key to direction. Think of it as the angle something is at. Each wheel needs to go somewhere when we want the robot to move so we need to look at how we control the robot."},"title":"Looking at Swerve"},"/docs/ftc/":{"data":{"":"","what-is-8081#What Is #8081":"Team #8081 is a FTC team from Gilbert, Arizona that functions from Gilbert Christian Schools and aims to provide opportunities to interact with STEM in association with FIRST.\nTeam #8081 is known as the Knights of the Lab Table and was founded in 2013."},"title":"FTC"}}