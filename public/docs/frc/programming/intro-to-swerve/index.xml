<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knights of the Lab Table ‚Äì Intro to Swerve</title>
    <link>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/</link>
    <description>Recent content in Intro to Swerve on Knights of the Lab Table</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jan 2025 09:29:18 -0700</lastBuildDate>
    
	  <atom:link href="https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Intro</title>
      <link>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/intro/</link>
      <pubDate>Tue, 07 Jan 2025 09:28:24 -0700</pubDate>
      
      <guid>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/intro/</guid>
      <description>
        
        
        &lt;h1&gt;What is swerve?&lt;/h1&gt;&lt;p&gt;Swerve drive is a fun one to explain, because it takes a long time to fully understand it, but once you do, you cannot go back.&lt;/p&gt;
&lt;h2&gt;Swerve From a Hardware Perspective&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;swerve-from-a-hardware-perspective&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#swerve-from-a-hardware-perspective&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Swerve is basically a shopping cart or dolly with spinning wheels. It&amp;rsquo;s similar to one of those rotating chairs you sit on.&lt;/p&gt;
&lt;p&gt;The wheels have two parts: the part that orients or aligns the wheel, and the part that makes it spin or go.&lt;/p&gt;
&lt;p&gt;A good example is the front wheel of a car, there is a &amp;ldquo;motor&amp;rdquo; that turns the wheel (not really, but using it as an example) to face any heading.
The other part of the wheel is the drive. The drive is the engine that actually propels the wheel.&lt;/p&gt;
&lt;p&gt;(Yes I know the car geeks will only say that works for 4 wheel drive and that the heading can only go a few degreees, but it&amp;rsquo;s hard to make a better example)&lt;/p&gt;
&lt;h2&gt;Swerve Drive&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;swerve-drive&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#swerve-drive&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Swerve Drive is the implementation of these wheels to power/push your robot so it can drive fast, accurately, and forcefully.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Looking at Swerve</title>
      <link>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/looking-at-swerve/</link>
      <pubDate>Wed, 08 Jan 2025 21:02:07 -0700</pubDate>
      
      <guid>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/looking-at-swerve/</guid>
      <description>
        
        
        &lt;h2&gt;Swerve Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;swerve-overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#swerve-overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Swerve is a little complex at first, but to implement it takes a lot of thinking
(trust me, I&amp;rsquo;ll try to make it easy, so you don&amp;rsquo;t have to have a few existential crises as you program it for the sixth time)&lt;/p&gt;
&lt;p&gt;Swerve drive has to start with the basics: you have 4 wheels. The first thing you need to do is understand how they work.&lt;/p&gt;
&lt;p&gt;Each of your four wheels has some manner that they need to go to push your robot, and there are &lt;em&gt;2&lt;/em&gt; different factors that show how they work. These are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; - How fast you want your wheel to go. This is a number between 0 and 1, where 0 is not moving at all and 1 is maximum speed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Heading&lt;/strong&gt; - The direction the wheel needs to go.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;‚ÑπÔ∏è&lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;Heading: the angle that something is facing. It&amp;rsquo;s important because it is key to direction. Think of it as the angle something is at.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Each wheel needs to go somewhere when we want the robot to move so we need to look at how we control the robot.&lt;/p&gt;
&lt;h2&gt;Controlling the Robot&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;controlling-the-robot&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#controlling-the-robot&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We use a controller to tell the robot where to go. The first thing we need to do is understand how swerve control works.&lt;/p&gt;
&lt;p&gt;Our controllers have two joysticks that can be used to control the robot.&lt;/p&gt;
&lt;p&gt;
    &lt;img src=&#34;../controllerEdited.png&#34; alt=&#34;Controller with arrows on image for examples&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that the joystick with the blue arrows has them pointing in all directions. This represents where you want the robot to go to.
The other joystick is for controlling the heading of the robot.&lt;/p&gt;
&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;‚ÑπÔ∏è&lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;The joystick with the blue is on the left and controlls the position of the robot. Swerve enables the robot to go in any direction,
including sideways and forward, like a drone or helicopter.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The purple arrows represent the manner that a person would want to turn the robot.&lt;/p&gt;
&lt;p&gt;The control systems are intuitive and the robot&amp;rsquo;s positioning should look like this:&lt;/p&gt;
&lt;p&gt;
    &lt;img src=&#34;../robotControlDirections.png&#34; alt=&#34;Robot with alignment of controls from previous image&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next we&amp;rsquo;ll look at breaking the overall breakdown of swerve.&lt;/p&gt;
&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;üóíÔ∏è&lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;We use the &amp;ldquo;PS4&amp;rdquo; controllers (console controllers) as most people call them. This is intentional, and we recognize some teams use joysticks.
We are using these because everyone has one of these at home, you can find them for very cheap at your local store,
and translating it to using the joysticks isn&amp;rsquo;t too difficult.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Swerve Programming Setup</title>
      <link>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/swerve-programming-setup/</link>
      <pubDate>Thu, 23 Jan 2025 08:53:57 -0700</pubDate>
      
      <guid>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/swerve-programming-setup/</guid>
      <description>
        
        
        &lt;h3&gt;Programming Setup&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;programming-setup&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#programming-setup&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To set up your programming environment you need to download the &lt;a href=&#34;https://github.com/wpilibsuite/allwpilib/releases/latest&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wpilib suite&lt;/a&gt; from GitHub, and if you need, you can look through the &lt;a href=&#34;https://docs.wpilib.org/en/stable/docs/zero-to-robot/step-2/wpilib-setup.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official website download&lt;/a&gt; (which redirects to the previous link) that gives a bit more info if you encounter problems.&lt;/p&gt;
&lt;h3&gt;Project Setup&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;project-setup&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#project-setup&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Once you have the stuff installed and are ready to &lt;span class=&#34;gradient-text&#34;&gt;Program Swerve!!!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You should be able to &lt;a href=&#34;https://docs.wpilib.org/en/latest/docs/zero-to-robot/step-4/creating-test-drivetrain-program-cpp-java-python.html#create-java-cpp-project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;make a new project&lt;/a&gt; and select &lt;code&gt;template&lt;/code&gt; then &lt;code&gt;java&lt;/code&gt; then &lt;code&gt;Timed Robot&lt;/code&gt; (don&amp;rsquo;t select the advanced one).&lt;/p&gt;
&lt;p&gt;You should have put the project in a folder (like Documents) and put in a team number (just put our team number, 9777 if you don&amp;rsquo;t have a team number yet,
it&amp;rsquo;s not too important for simple development).&lt;/p&gt;
&lt;p&gt;The code now should now be generated and in the left pane you should see this in the side pane:&lt;/p&gt;
&lt;p&gt;
    &lt;img src=&#34;../ExampleCodeStartup.png&#34; alt=&#34;Image of what you should see in VS Code&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, I have named the project &lt;code&gt;ExampleSwerveDrive&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Your code is located inside the &lt;code&gt;src/main/java/frc/robot&lt;/code&gt; folder&lt;/p&gt;
&lt;p&gt;
    &lt;img src=&#34;../codeLocationMainFiles.png&#34; alt=&#34;an example of where the code is&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Setup for This Tutorial&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;setup-for-this-tutorial&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#setup-for-this-tutorial&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;One should make three new files, and one new folder.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right click on the &lt;code&gt;src/main/java/frc/robot&lt;/code&gt; and click new file. When a text box appears, type in &lt;code&gt;HardwareMappings.java&lt;/code&gt;. (Don&amp;rsquo;t worry about the text that appears for the file)&lt;/li&gt;
&lt;li&gt;Right click on the &lt;code&gt;src/main/java/frc/robot&lt;/code&gt; and click the new folder and name it &lt;code&gt;teleopswerve&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Right click on the &lt;code&gt;src/main/java/frc/robot/teleopswerve&lt;/code&gt; folder and make 2 new files (like in step 1) named &lt;code&gt;SwerveModule.java&lt;/code&gt; and &lt;code&gt;SwerveDrive.java&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now you&amp;rsquo;re done making all the files you&amp;rsquo;ll need. The only thing left is the hit &lt;span class=&#34;gradient-text&#34;&gt;&lt;em&gt;Ctrl+S&lt;/em&gt;&lt;/span&gt;
for all the rest of the files.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You&amp;rsquo;re setup should look like something like this.&lt;/p&gt;
&lt;p&gt;
    &lt;img src=&#34;../setupExample.png&#34; alt=&#34;example of the finished setup&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;‚ÑπÔ∏è&lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;The white dot next to the filename in the editor means that the file is not saved, you can just select the file, and once it loads in the
exitor, you can type &lt;em&gt;&lt;em&gt;Ctrl+S&lt;/em&gt;&lt;/em&gt; to save it&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Swerve Math</title>
      <link>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/swerve-math/</link>
      <pubDate>Thu, 23 Jan 2025 15:46:49 -0700</pubDate>
      
      <guid>https://docs.knightsofthelabtable.org/docs/frc/programming/intro-to-swerve/swerve-math/</guid>
      <description>
        
        
        &lt;h1&gt;Swerve Math&lt;/h1&gt;&lt;h2&gt;Swerve Controller Setup&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;swerve-controller-setup&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#swerve-controller-setup&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Remember the controller?&lt;/p&gt;
&lt;p&gt;
    &lt;img src=&#34;../controllerEdited.png&#34; alt=&#34;Controller with arrows for reference&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well, these value are incredibly important when programming swerve. We went over what values should translate to what in swerve, but grabbing these values is key and is something that we should note.&lt;/p&gt;
&lt;h2&gt;Swerve Preliminary Steps&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;swerve-preliminary-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#swerve-preliminary-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The first steps of swerve involve grabbing the values from your controller and using them to be able to put them into your program&lt;/p&gt;
&lt;p&gt;The first thing it go grab the x and y from the controller.&lt;/p&gt;
&lt;p&gt;In the beginning of the declaration of your code you should put&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XboxController&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;controller&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XboxController&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The controller&amp;rsquo;s state for x and y can be grabbed using the&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLeftX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLeftY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To start with this I reccomend putting&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
